{"ast":null,"code":"import _classCallCheck from\"/Users/maxmagnusson/Desktop/landing-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/maxmagnusson/Desktop/landing-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/maxmagnusson/Desktop/landing-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/maxmagnusson/Desktop/landing-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/maxmagnusson/Desktop/landing-react/node_modules/@babel/runtime/helpers/esm/inherits\";import{MountableComponent}from'../MountableComponent';import _ from'lodash';/**\n * React Component that will handle deep comparison in shouldComponentUpdate.\n * This Component also exposes Component.getDerivedStateFromProps() functionality by\n * checking if state.getDerivedState is set, this way we can generate derived state from a\n * non-static enviroment in the state.getDerivedState function.\n * \n * Example:\n```\nexport class MyComponent extends StateComponent {\n  state = {\n    getDerivedState: (nextProps, nextState) => {\n      const propsChanged = !this.isEqual(nextProps, this.props)\n      const stateChanged = !this.isEqual(this.state, nextState)\n      return null\n    }\n  }\n  render() {\n    return <LotsOfUI />\n  }\n}\n```\n * \n * @extends MountableComponent\n */export var StateComponent=/*#__PURE__*/function(_MountableComponent){_inherits(StateComponent,_MountableComponent);function StateComponent(){_classCallCheck(this,StateComponent);return _possibleConstructorReturn(this,_getPrototypeOf(StateComponent).apply(this,arguments));}_createClass(StateComponent,[{key:\"shouldComponentUpdate\",// TODO MAYBE have custom key: _componentUpdateFingerprint, and if this key is set then it will be used for determening if a component should update or not\n// TODO MAYBE NOT because child-state will be irrelevant with this solution, and break component design.\nvalue:function shouldComponentUpdate(nextProps,nextState){// const className = this.__proto__.constructor.name\n// console.log(className + '.shouldComponentUpdate', {\n//   changedProps: !this.isEqual(nextProps, this.props),\n//   changedState: !this.isEqual(nextState, this.state),\n//   prevProps: this.props,\n//   nextProps: nextProps,\n//   prevState: this.state,\n//   nextState: nextState\n// })\n// const timestamp = Date.now()\nif(!this.isEqual(nextProps,this.props)||!this.isEqual(nextState,this.state)){// console.log(className + `.isEqual took: ${Date.now() - timestamp} ms`)\nreturn true;}// console.log(className + `.isEqual took: ${Date.now() - timestamp} ms`)\nreturn false;}},{key:\"isEqual\",value:function isEqual(firstObject,secondObject){return _.isEqual(firstObject,secondObject);}}],[{key:\"getDerivedStateFromProps\",/**\n   * https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n   * It should return an object to update the state, or null to update nothing.\n   */value:function getDerivedStateFromProps(nextProps,nextState){if(nextState&&_.isFunction(nextState.getDerivedState)){return nextState.getDerivedState(nextProps,nextState);}return null;}}]);return StateComponent;}(MountableComponent);","map":{"version":3,"sources":["/Users/maxmagnusson/Desktop/landing-react/src/_components/base/StateComponent.jsx"],"names":["MountableComponent","_","StateComponent","nextProps","nextState","isEqual","props","state","firstObject","secondObject","isFunction","getDerivedState"],"mappings":"0nBAAA,OAASA,kBAAT,KAAmC,uBAAnC,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CAEA;;;;;;;;;;;;;;;;;;;;;;;GAwBA,UAAaC,CAAAA,cAAb,kTAYE;AACA;AAbF,qCAcwBC,SAdxB,CAcmCC,SAdnC,CAc8C,CAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACE,CAAC,KAAKC,OAAL,CAAaF,SAAb,CAAwB,KAAKG,KAA7B,CAAD,EACA,CAAC,KAAKD,OAAL,CAAaD,SAAb,CAAwB,KAAKG,KAA7B,CAFH,CAGE,CACA;AACA,MAAO,KAAP,CACD,CACD;AACA,MAAO,MAAP,CACD,CAlCH,wCAoCUC,WApCV,CAoCuBC,YApCvB,CAoCqC,CACjC,MAAOR,CAAAA,CAAC,CAACI,OAAF,CAAUG,WAAV,CAAuBC,YAAvB,CAAP,CACD,CAtCH,oCACE;;;KADF,wCAKkCN,SALlC,CAK6CC,SAL7C,CAKwD,CACpD,GAAIA,SAAS,EAAIH,CAAC,CAACS,UAAF,CAAaN,SAAS,CAACO,eAAvB,CAAjB,CAA0D,CACxD,MAAOP,CAAAA,SAAS,CAACO,eAAV,CAA0BR,SAA1B,CAAqCC,SAArC,CAAP,CACD,CACD,MAAO,KAAP,CACD,CAVH,4BAAoCJ,kBAApC","sourcesContent":["import { MountableComponent } from '../MountableComponent'\nimport _ from 'lodash'\n\n/**\n * React Component that will handle deep comparison in shouldComponentUpdate.\n * This Component also exposes Component.getDerivedStateFromProps() functionality by\n * checking if state.getDerivedState is set, this way we can generate derived state from a\n * non-static enviroment in the state.getDerivedState function.\n * \n * Example:\n```\nexport class MyComponent extends StateComponent {\n  state = {\n    getDerivedState: (nextProps, nextState) => {\n      const propsChanged = !this.isEqual(nextProps, this.props)\n      const stateChanged = !this.isEqual(this.state, nextState)\n      return null\n    }\n  }\n  render() {\n    return <LotsOfUI />\n  }\n}\n```\n * \n * @extends MountableComponent\n */\nexport class StateComponent extends MountableComponent {\n  /**\n   * https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n   * It should return an object to update the state, or null to update nothing.\n   */\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextState && _.isFunction(nextState.getDerivedState)) {\n      return nextState.getDerivedState(nextProps, nextState)\n    }\n    return null\n  }\n\n  // TODO MAYBE have custom key: _componentUpdateFingerprint, and if this key is set then it will be used for determening if a component should update or not\n  // TODO MAYBE NOT because child-state will be irrelevant with this solution, and break component design.\n  shouldComponentUpdate(nextProps, nextState) {\n    // const className = this.__proto__.constructor.name\n    // console.log(className + '.shouldComponentUpdate', {\n    //   changedProps: !this.isEqual(nextProps, this.props),\n    //   changedState: !this.isEqual(nextState, this.state),\n    //   prevProps: this.props,\n    //   nextProps: nextProps,\n    //   prevState: this.state,\n    //   nextState: nextState\n    // })\n    // const timestamp = Date.now()\n    if (\n      !this.isEqual(nextProps, this.props) ||\n      !this.isEqual(nextState, this.state)\n    ) {\n      // console.log(className + `.isEqual took: ${Date.now() - timestamp} ms`)\n      return true\n    }\n    // console.log(className + `.isEqual took: ${Date.now() - timestamp} ms`)\n    return false\n  }\n\n  isEqual(firstObject, secondObject) {\n    return _.isEqual(firstObject, secondObject)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}